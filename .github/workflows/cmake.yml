name: CMake
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
jobs:
  build:
    name: Build and test `ds`
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    env:
      # Customize the CMake build type here (Release, Debug, RelWithDebInfo, MinSizeRel, etc.)
      BUILD_TYPE: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: get-cmake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.25.1
          ninjaVersion: 1.11.1

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: >
          cmake
          --no-warn-unused-cli
          -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE
          -DCMAKE_BUILD_TYPE:STRING=${{ env.BUILD_TYPE }}
          -DCMAKE_C_COMPILER:FILEPATH=gcc
          -DCMAKE_CXX_COMPILER:FILEPATH=g++
          -DDS_BUILD_TESTING=ON
          -S${{ github.workspace }}
          -B${{ github.workspace }}/build
          -G Ninja

      - name: Build `ds`
        # Build `ds` with the given configuration
        run: >
          cmake
          -DDS_BUILD_TESTING=ON
          --build ${{ github.workspace }}/build
          --config ${{ env.BUILD_TYPE }}
          --target all

      - name: Test `ds`
        working-directory: ${{ github.workspace }}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: >
          ctest
          -C ${{ env.BUILD_TYPE }}
          -T test
          --output-on-failure
