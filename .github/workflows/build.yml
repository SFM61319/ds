name: Build, test, and deploy

on:
  # Runs on pushes and PR merges to the main branch.
  push:
    branches:
      - main
    paths:
      - .github/workflows/build.yml
      - include/**
      - src/**
      - templates/**
      - tests/**
      - Doxyfile
      - README.md
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/build.yml
      - include/**
      - src/**
      - templates/**
      - tests/**
      - Doxyfile
      - README.md

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    name: Build and test `ds`
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    env:
      # Customize the CMake build type here (Release, Debug, RelWithDebInfo, MinSizeRel, etc.)
      BUILD_TYPE: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3
        with:
          lfs: true
          submodules: recursive

      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Build and export `ds`
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: ./Dockerfile
          load: true
          push: false
          tags: ds
          build-args: BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Test `ds`
        run: /usr/bin/docker run --rm ds

  deploy:
    name: Generate documentation and deploy to GitHub Pages
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # The Doxygen build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3
        with:
          lfs: true
          submodules: recursive

      - name: Doxygen Action
        uses: mattnotmitt/doxygen-action@1.9.4

      - name: Commit generated documentation
        run: |
          git config --global user.name "Avinash Maddikonda"
          git config --global user.email "45308169+SFM61319@users.noreply.github.com"
          git add --all
          git commit -m "Generate automated Doxygen documentation"
          git push

      - name: Setup Pages
        uses: actions/configure-pages@v3.0.6

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2.0.0
        with:
          # Upload the HTML docs
          path: ./docs/html

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2.0.3
